/* Global Functions for use */
/*VIEWING_LIST = ['Breakfast - Monday', 'Breakfast - Tuesday', 'Breakfast - Wednesday', 'Breakfast - Thursday',
    'Breakfast - Friday','Breakfast - Weekend', 'Lunch - Monday', 'Lunch - Tuesday', 'Lunch - Wednesday',
    'Lunch - Wednesday', 'Lunch - Thursday', 'Lunch - Friday', 'Lunch - Weekend', 'Dinner - Monday', 'Dinner - Tuesday',
    'Dinner - Wednesday', 'Dinner - Thursday', 'Dinner - Friday', 'Dinner - Weekend'];
*/

VIEWING_LIST = [['Breakfast - Monday', 'Breakfast - Tuesday', 'Breakfast - Wednesday', 'Breakfast - Thursday',
    'Breakfast - Friday','Breakfast - Weekend'], ['Lunch - Monday', 'Lunch - Tuesday', 'Lunch - Wednesday',
    'Lunch - Wednesday', 'Lunch - Thursday', 'Lunch - Friday', 'Lunch - Weekend'], ['Dinner - Monday', 'Dinner - Tuesday',
    'Dinner - Wednesday', 'Dinner - Thursday', 'Dinner - Friday', 'Dinner - Weekend'], ['No Meal Selected']];

WEEK_LIST = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Weekend'];
MEAL_LIST = ['Breakfast', 'Lunch', 'Dinner'];

ELEMENT_LIST = ['b_mon', 'b_tue', 'b_wed', 'b_thur', 'b_fri', 'b_weekend', 'l_mon', 'l_tue', 'l_wed', 'l_thur', 'l_fri',
    'l_weekend', 'd_mon', 'd_tue', 'd_wed', 'd_thur', 'd_fri', 'd_weekend'];

COLOURS_USED = ["indianred", "orange", "dodgerblue", "green", "rebeccapurple", "saddlebrown", "gold"];
TYPES_LIST = ['protein', 'grain', 'dairy', 'vege', 'fruit', 'fats', 'disc', 'totalCal'];

currentServingAmount = [0,0,0,0,0,0,0,0];

var pTotal = 0;
var cTotal = 0;
var fTotal = 0;
var calTotal = 0;

var assPanelProtein = 0;
var assPanelCarb = 0;
var assPanelFat = 0;
var assPanelCal = 0;

var currentlyViewed = 'Breakfast - Monday';
var saveDay = -1;
var saveMeal = -1;
var selectedItemList = [];

function resetAllVariables() {
    currentServingAmount = [0, 0, 0, 0, 0, 0, 0, 0];

    pTotal = 0;
    cTotal = 0;
    fTotal = 0;
    calTotal = 0;

    assPanelProtein = 0;
    assPanelCarb = 0;
    assPanelFat = 0;
    assPanelCal = 0;

    currentlyViewed = 'Breakfast - Monday';
    saveDay = -1;
    saveMeal = -1;
    selectedItemList = [];

    $('#accessoryPanel_currentList').html('');
    $('#assPanel_protein').html('0g');
    $('#assPanel_carb').html('0g');
    $('#assPanel_fat').html('0g');
    $('#assPanel_cal').html('0cal');

    alert(selectedItemList);

}


function updateSelected(day, slot, mealname) {
    saveDay = WEEK_LIST[day];
    saveMeal = MEAL_LIST[slot];

    if(day != -1) {
        $('#currentViewed').html(VIEWING_LIST[slot][day]);
        $('#mp_breadcrumb').html('<li class="breadcrumb-item">' + WEEK_LIST[day] + '</li><li class="breadcrumb-item">' +
            MEAL_LIST[slot] + '</li><li class="breadcrumb-item"><strong>' + mealname + '</strong></li>');
    } else {
        $('#currentViewed').html("Unspecified");
        $('#mp_breadcrumb').html('<li class="breadcrumb-item">Anyday</li><li class="breadcrumb-item"><strong>No Specific Meal</strong></li>');
    }

}

function loadInValuesFromDB(data, productType) {
    /* Loop through the data for each of the sections and update that row in the tables. */
    for (var i = 0; i<data.length; i++) {
        var trElem = $('#'+productType+'_'+data[i]);
        var tdElem = $('#td_'+productType+'_'+data[i]);
        trElem.css({"background-color": COLOURS_USED[productType], "color": "white"});
        tdElem.click();
    }

    /*Also add to left list */
}

function resetTables() {
    /* Loop through the data for each of the sections and update that row in the tables. */
    var proElem = $('#proteinBody');
    var fatElem = $('#mp_fatsTableBody');

    var test = document.querySelectorAll('tr');

    for (var i = 1; i < test.length; i++) {
        var t = $(test[i]).attr('id');
        if(t != null) {
            var trimmed = t.slice('_');
            console.log(trimmed[0]);
            switch (trimmed[0]) {
                case '0':
                    $(test[i]).css({"background-color": "white", "color": COLOURS_USED[0]});
                    break;
                case '1':
                    $(test[i]).css({"background-color": "white", "color": COLOURS_USED[1]});
                    break;
                case '2':
                    $(test[i]).css({"background-color": "white", "color": COLOURS_USED[2]});
                    break;
                case '3':
                    $(test[i]).css({"background-color": "white", "color": COLOURS_USED[3]});
                    break;
                case '4':
                    $(test[i]).css({"background-color": "white", "color": COLOURS_USED[4]});
                    break;
                case '5':
                    $(test[i]).css({"background-color": "white", "color": COLOURS_USED[5]});
                    break;
                case '6':
                    $(test[i]).css({"background-color": "white", "color": COLOURS_USED[6]});
                    break;
            }
        }
    }

    resetAllVariables();
    /*Also add to left list */
}

function showDataEntries(tableRow) {

    alert(tableRow);

}

function changeMealSelectionDay(dayChosen) {

    currentlyViewed = VIEWING_LIST[dayChosen];

    /*Update chosen item list (if any) */

    $('#'+ELEMENT_LIST[dayChosen]).css('background-color', 'red');
    $('#currentViewed').html(currentlyViewed);
}

function calculateTotals() {

    for(var k = 0; k < selectedItemList.length; k++) {
        pTotal += selectedItemList[k][2];
        cTotal += selectedItemList[k][3];
        fTotal += selectedItemList[k][4];
        calTotal += selectedItemList[k][1];

    }

    $('#proteinTotal').html(pTotal + 'g');
    $('#carbTotal').html(cTotal + 'g');
    $('#fatsTotal').html(fTotal + 'g');
    $('#calTotal').html(calTotal + 'cal');

    /*$('#accessoryPanel_currentList').html("<tr><td>Kangaroo</td></tr>");*/
}

function recreateSelectedList() {

    assPanelProtein = 0;
    assPanelCarb = 0;
    assPanelFat = 0;
    assPanelCal = 0;



    $('#accessoryPanel_currentList').html('');

    for (var j = 0; j < selectedItemList.length; j++) {
        $('#accessoryPanel_currentList').html(''+$('#accessoryPanel_currentList').html() +
            '<tr onclick = (showDataEntries('+j+')) style="background-color:'+COLOURS_USED[selectedItemList[j][7]]+'; color:white">' +
            '<td class="mp_totalBorders CellWithComment" colspan="2"> ' + selectedItemList[j][0] +
            '<span id="cellNum_'+j+'" class="CellComment"><table><tr><td class="text-right"><strong>Protein:&nbsp</strong></td><td>' + selectedItemList[j][2] + 'g</tr><tr>' +
            '<td class="text-right"><strong>Carb:&nbsp</strong></td><td>' + selectedItemList[j][3] +
            'g</tr><tr><td class="text-right"><strong>Fat:&nbsp</strong>' +
            '</td><td>' + selectedItemList[j][4] + 'g</tr><tr><td class="text-right"><strong>'+
            'Total Cal:&nbsp</strong></td><td>' + selectedItemList[j][1] + 'cal</td></tr></table></span></td> </tr>');

        assPanelProtein += parseInt(selectedItemList[j][2]);
        assPanelCarb += parseInt(selectedItemList[j][3]);
        assPanelFat += parseInt(selectedItemList[j][4]);
        assPanelCal += parseInt(selectedItemList[j][1]);

    }
    calculateTotals();

    $('#assPanel_protein').html(assPanelProtein+'g');
    $('#assPanel_carb').html(assPanelCarb+'g');
    $('#assPanel_fat').html(assPanelFat+'g');
    $('#assPanel_cal').html(assPanelCal+'cal');
}

var counter = 0;

function makeItemSelection(itemType, productID, productName, totalCal, proteinQty, carbQty, fatQty, servingQty, servingType) {
    var el = $('#' + TYPES_LIST[itemType] + 'Serving');
    var totalCalIn = $('#' + TYPES_LIST[7] + 'Serving');

        for (var i = 0; i < selectedItemList.length; i++) {
            if (selectedItemList[i][0] == productName) {
                selectedItemList.splice(i, 1);
                $('#' + itemType + '_' + productID).css({"background-color": "white", "color": COLOURS_USED[itemType]});
                recreateSelectedList();
                /* Increase the servings */

                el.html(parseInt(el.html()) + 1);
                totalCalIn.html(parseInt(totalCalIn.html()) + parseInt(totalCal));
                counter = 0;
                return;
            }
        }

    if(parseInt(totalCalIn.html()) >= parseInt(totalCal)) {
        if (parseInt(el.html()) != 0) {
            selectedItemList.push([productName, totalCal, proteinQty, carbQty, fatQty, servingQty, servingType, itemType, productID]);

            $('#accessoryPanel_currentList').html('' + $('#accessoryPanel_currentList').html() +
                '<tr onclick = (showDataEntries('+counter+')) style="background-color: ' + COLOURS_USED[itemType] + '; color:white">' +
                '<td  class="mp_totalBorders CellWithComment" colspan="2">' + productName + '<span id="cellNum_'+counter+
                '"class="CellComment"><table><tr><td class="text-right"><strong>Protein:&nbsp</strong></td><td>'+proteinQty+'g</tr><tr>' +
                '<td class="text-right"><strong>Carb:&nbsp</strong></td><td>'+carbQty+'g</tr><tr><td class="text-right"><strong>Fat:&nbsp</strong>' +
                '</td><td>'+fatQty+'g</tr><tr><td class="text-right"><strong>Total Cal:&nbsp</strong></td><td>'+totalCal+'cal</td></tr></table></span></td></tr>');

            counter+=1;

            assPanelProtein += parseInt(proteinQty);
            assPanelCarb += parseInt(carbQty);
            assPanelFat += parseInt(fatQty);
            assPanelCal += parseInt(totalCal);

            $('#assPanel_protein').html(assPanelProtein+'g');
            $('#assPanel_carb').html(assPanelCarb+'g');
            $('#assPanel_fat').html(assPanelFat+'g');
            $('#assPanel_cal').html(assPanelCal+'cal');

            $('#' + itemType + '_' + productID).css({"background-color": COLOURS_USED[itemType], "color": "white"});
            calculateTotals();

            /* Reduce the servings */
            el.html(parseInt(el.html()) - 1);
            totalCalIn.html(parseInt(totalCalIn.html() - totalCal))
        }
    }

}

function convertMeal(mealWord) {
    switch (mealWord) {
        case 'breakfast':
            return 0;
            break;
        case 'lunch':
            return 1;
            break;
        case 'dinner':
            return 2;
            break;
    }
}

function convertDay(dayWord) {
    switch (dayWord) {
        case 'Monday':
            return 0;
            break;
        case 'Tuesday':
            return 1;
            break;
        case 'Wednesday':
            return 2;
            break;
        case 'Thursday':
            return 3;
            break;
        case 'Friday':
            return 4;
            break;
        case 'Weekend':
            return 5;
            break;
        case 'Monday':
            return 6;
            break;
    }
}


function getMealData(mealData) {

    if(mealData != "-1") {
        var message = mealData;
        var split = mealData.split('_');
        var data = {"meal": split[0], "day": split[1]};
        var mealInt = convertMeal(split[0]);
        var dayInt = convertDay(split[1]);
        data = JSON.stringify(data);

        $.ajax({
            url: "/user_dashboard/getMealData/" + data + "",
            type: "GET",
            contentType: "application/json",
            dataType: 'json',
        }).success(function (data) {
                if (data["mealname"] != '-1') {
                    loadInValuesFromDB(JSON.parse(data["proteinIDs"])["IDs"], 0);
                    loadInValuesFromDB(JSON.parse(data["grainIDs"])["IDs"], 1);
                    loadInValuesFromDB(JSON.parse(data["dairyIDs"])["IDs"], 2);
                    loadInValuesFromDB(JSON.parse(data["vegeIDs"])["IDs"], 3);
                    loadInValuesFromDB(JSON.parse(data["fruitIDs"])["IDs"], 4);
                    loadInValuesFromDB(JSON.parse(data["fatIDs"])["IDs"], 5);
                    loadInValuesFromDB(JSON.parse(data["discIDs"])["IDs"], 6);
                    changeMealSelectionDay(split[1]);
                    updateSelected(dayInt, mealInt, data["mealname"]);
                } else {
                    updateSelected(dayInt, mealInt, "");
                    /* There is nothing stored in the DB for this day display what's stored */
                }
            }
        )
    } else {

        updateSelected(-1, 0, '');
        resetTables();
    }
};



function saveMealData(mealData) {

    var mealName = $('#mealName').val();
    var description = $('#mealDescription').val();

    var isB = document.querySelector('#breakfastMeal').checked;
    var isL = document.querySelector('#lunchMeal').checked;
    var isD = document.querySelector('#dinnerMeal').checked;

    var proteinIDs = "";
    var grainIDs = "";
    var dairyIDs = "";
    var vegeIDs = "";
    var fruitIDs = "";
    var fatsIDs = "";
    var discIDs = "";


    for(var i = 0; i < selectedItemList.length; i++) {
        switch (parseInt(selectedItemList[i][7])) {
            case 0:
                proteinIDs += selectedItemList[i][8] + ',';
                break;
            case 1:
                grainIDs += selectedItemList[i][8] + ',';
                break;
            case 2:
                dairyIDs += selectedItemList[i][8] + ',';
                break;
            case 3:
                vegeIDs += selectedItemList[i][8] +  ',';
                break;
            case 4:
                fruitIDs += selectedItemList[i][8] + ',';
                break;
            case 5:
                fatsIDs += selectedItemList[i][8] + ',';
                break;
            case 6:
                discIDs += selectedItemList[i][8] + ',';
                break;
        }
    }

    var data = {"mealname": mealName, "description": description, "mealChosen": saveMeal, "dayChosen": saveDay,
    "isBreakfastSuitable": isB, "isLunchSuitable": isL, "isDinnerSuitable": isD, "proteinIDs": proteinIDs,
    "grainIDs": grainIDs, "dairyIDs": dairyIDs, "vegeIDs": vegeIDs, "fruitIDs":fruitIDs, "fatIDs": fatsIDs,
    "discIDs": discIDs, "proteinTotal": assPanelProtein, "carbTotal": assPanelCarb, "fatTotal": assPanelFat,
        "calTotal": assPanelCal};

    data = JSON.stringify(data);

    $.ajax({
        url: "/user_dashboard/saveMeal/"+data+"",
        contentType: "application/json",
        dataType: 'json',
    }).success(function(data) {
            alert("Successful");
        }
    )
};